services:

  es-ror:
    build:
      context: ../.
      dockerfile: elk-ror/images/es/Dockerfile
      args:
        ES_VERSION: $ES_VERSION
        ES_ROR_FILE: $ES_ROR_FILE
    ports:
      - "19200:9200"
      - "19300:9300"
      - "5000:5000"
    deploy:
      resources:
        limits:
          memory: 2G # ES heap will get 1GB
    environment:
      - ES_VERSION=$ES_VERSION
      - cluster.name=ror-es-cluster
      - node.name=es-ror-single
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      # for a sake of debugging and profiling
      - "ES_JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5000 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9010 -Dcom.sun.management.jmxremote.local.only=false -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.rmi.port=9010 -Djava.rmi.server.hostname=127.0.0.1"
    healthcheck:
      test: [ "CMD", "curl", "-fk", "-u", "kibana:kibana", "http://localhost:9200/_cluster/health" ]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 60s
    networks:
      - es-ror-network
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /tmp/visualvm:/tmp/visualvm 

  kbn-ror:
    build:
      context: ../.
      dockerfile: elk-ror/images/kbn/Dockerfile
      args:
        KBN_VERSION: $KBN_VERSION
        KBN_ROR_FILE: $KBN_ROR_FILE
        ROR_ACTIVATION_KEY: $ROR_ACTIVATION_KEY
    depends_on:
      es-ror:
        condition: service_healthy
    deploy:
      mode: replicated
      replicas: 3
      resources:
        limits:
          memory: 756G 
    environment:
      ELASTIC_USER_PASSWORD: elastic
      ES_API_URL: http://es-ror:9200
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:5601/api/status" ]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 60s
    networks:
      - es-ror-network
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kbn-proxy:
    build:
      context: ../.
      dockerfile: elk-ror/images/kbn/Proxy-Dockerfile
    depends_on:
      kbn-ror:
        condition: service_healthy
    ports:
      - "5601:80"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:80/api/status" ]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 60s
    networks:
      - es-ror-network

networks:
  es-ror-network:
    driver: bridge