services:

  es-ror:
    build:
      context: .
      dockerfile: images/es/Dockerfile
      args:
        ES_VERSION: 8.14.1
        ROR_FILE: readonlyrest-1.58.0_es8.14.1.zip
    ports:
      - "19200:9200"
      - "19300:9300"
      - "5000:5000"
    environment:
      - cluster.name=ror-es-cluster
      - node.name=es-ror-single
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5000"
      - ES_VERSION=$ES_VERSION
    healthcheck:
      test: [ "CMD", "curl", "-fk", "-u", "kibana:kibana", "http://localhost:9200/_cluster/health" ]
      interval: 10s
      timeout: 10s
      retries: 30
      start_period: 60s
    networks:
      - es-ror-network
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kbn-ror:
    build:
      context: .
      dockerfile: images/kbn/Dockerfile
      args:
        KBN_VERSION: 8.14.1
        ROR_FILE: readonlyrest_kbn_universal-1.58.0_es8.14.1.zip
        ROR_ACTIVATION_KEY: $ROR_ACTIVATION_KEY
    depends_on:
      es-ror:
        condition: service_healthy
    ports:
      - "5601:5601"
    environment:
      ELASTIC_USER_PASSWORD: elastic
      ES_API_URL: http://es-ror:9200
    # todo: healthcheck
    networks:
      - es-ror-network
    ulimits:
      memlock:
        soft: -1
        hard: -1

networks:
  es-ror-network:
    driver: bridge
